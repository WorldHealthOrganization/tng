name: ci-release
on:
  release:
    types:
    - created
jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: adopt
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
    - name: version
      run: >-
        APP_SHA=$(git rev-parse --short ${GITHUB_SHA});
        APP_TAG=${GITHUB_REF/refs\/tags\/}
        APP_VERSION=${APP_TAG};
        echo "APP_SHA=${APP_SHA}" >> ${GITHUB_ENV};
        echo "APP_TAG=${APP_TAG}" >> ${GITHUB_ENV};
        echo "APP_VERSION=${APP_VERSION}" >> ${GITHUB_ENV};
    - name: mvn
      run: >-
        mvn versions:set
        --batch-mode
        --file ./pom.xml
        --settings ./settings.xml
        --define newVersion="${APP_VERSION}";
        mvn clean package
        --batch-mode
        --file ./pom.xml
        --settings ./settings.xml
        --define app.packages.username="${APP_PACKAGES_USERNAME}"
        --define app.packages.password="${APP_PACKAGES_PASSWORD}";
      env:
        APP_PACKAGES_USERNAME: ${{ github.actor }}
        APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    - name: Build ZIP
      run: zip -j dgc-cli.zip target/dgc-cli.jar src/wrapper/dgc.bat
    - name: upload-to-release
      run: gh release upload ${APP_TAG} --clobber dgc-cli.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
